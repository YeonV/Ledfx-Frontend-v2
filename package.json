{
  "name": "ledfx",
  "version": "2.0.60",
  "description": "LedFx - BladeMOD ",
  "author": "YeonV aka Blade",
  "private": true,
  "main": "public/electron.js",
  "homepage": ".",
  "dependencies": {
    "@electron/remote": "^2.0.8",
    "@emotion/react": "^11.10.5",
    "@emotion/styled": "^11.10.5",
    "@mui/icons-material": "^5.10.9",
    "@mui/material": "^5.10.13",
    "@mui/styles": "^5.10.10",
    "@mui/x-data-grid": "^5.17.10",
    "@storybook/react": "^6.5.13",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.4.0",
    "@types/qs": "^6.9.7",
    "@types/reactour": "^1.18.1",
    "axios": "^1.1.3",
    "chart.js": "3.9.1",
    "electron-is-dev": "^2.0.0",
    "electron-squirrel-startup": "^1.0.0",
    "eslint-config-react-app": "7.0.1",
    "immer": "9.0.16",
    "is-electron": "^2.2.1",
    "moment": "^2.29.4",
    "moment-duration-format": "^2.3.2",
    "notistack": "^2.0.8",
    "oauth-pkce": "0.0.6",
    "prop-types": "^15.8.1",
    "react": "^18.1.0",
    "react-chartjs-2": "4.3.1",
    "react-dom": "^18.1.0",
    "react-gcolor-picker": "^1.3.0",
    "react-git-info": "^2.0.1",
    "react-hotkeys-hook": "^3.4.7",
    "react-rnd": "^10.3.7",
    "react-router-dom": "^6.4.3",
    "react-scripts": "5.0.1",
    "reactour": "^1.18.7",
    "recharts": "^2.1.16",
    "sockette": "^2.0.6",
    "styled-components": "^5.3.6",
    "typescript": "^4.8.4",
    "universal-cookie": "^4.0.4",
    "use-api-polling": "^0.1.4",
    "use-long-press": "^2.0.2",
    "web-vitals": "^3.0.4",
    "workbox-core": "^6.5.4",
    "workbox-expiration": "^6.5.4",
    "workbox-precaching": "^6.5.4",
    "workbox-routing": "^6.5.4",
    "workbox-strategies": "^6.5.4",
    "zustand": "^4.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "prebuild": "node -e \"let pkg=require('./package.json'); pkg.homepage='/'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "postbuild": "node -e \"let pkg=require('./package.json'); pkg.homepage='.'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "buildhass": "react-scripts build",
    "prebuildhass": "node -e \"let pkg=require('./package.json'); pkg.homepage='./'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "postbuildhass": "node -e \"let pkg=require('./package.json'); pkg.homepage='.'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "buildgh": "PUBLIC_URL=/LedFx-Frontend-v2/ react-scripts build",
    "prebuildgh": "node -e \"let pkg=require('./package.json'); pkg.homepage='/LedFx-Frontend-v2/'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "predeploy": "yarn buildgh",
    "deploy": "gh-pages -d build",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "packs": "electron-builder --dir",
    "dist": "run-script-os",
    "predist": "node -e \"let pkg=require('./package.json'); pkg.homepage='.'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "dist:win32": "react-scripts build && electron-builder --config electron-builder.json -w zip -w portable -w nsis",
    "dist:default": "react-scripts build && electron-builder --config electron-builder.json",
    "distcc": "run-script-os",
    "predistcc": "node -e \"let pkg=require('./package.json'); pkg.homepage='.'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "distcc:win32": "react-scripts build && electron-builder",
    "distcc:default": "react-scripts build && electron-builder",
    "distall": "run-script-os",
    "predistall": "set PUBLIC_URL=. && node -e \"let pkg=require('./package.json'); pkg.homepage='.'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "distall:win32": "react-scripts build && electron-builder && electron-builder --config electron-builder.json -w zip -w portable -w nsis",
    "distall:default": "react-scripts build && electron-builder && electron-builder --config electron-builder.json",
    "dist-multi": "react-scripts build && electron-builder -mwl",
    "dev": "concurrently \"cross-env BROWSER=none yarn start\" \"wait-on http://localhost:3000 && electron .\"",
    "compile-electron": "run-script-os",
    "compile-electron:win32": "copy app\\*.ts build\\*.js",
    "compile-electron:default": "cp ./app/electron.ts ./build/electron.js && cp ./app/preload.ts ./build/preload.js && cp ./app/renderer.ts ./build/renderer.js && cp ./app/serviceWorker.ts ./build/serviceWorker.js",
    "electron": "wait-on tcp:3000 && electron .",
    "postinstall": "electron-builder install-app-deps",
    "storybook": "start-storybook -p 6006 -s public",
    "build-storybook": "build-storybook -s public",
    "prebuild-storybook": "run-script-os",
    "prebuild-storybook:win32": "set PUBLIC_URL=/LedFx-Frontend-v2/docs",
    "prebuild-storybook:default": "PUBLIC_URL=/LedFx-Frontend-v2/docs",
    "build-storybookgh": "PUBLIC_URL=/LedFx-Frontend-v2/docs build-storybook -s public",
    "prebuild-storybookgh": "node -e \"let pkg=require('./package.json'); pkg.homepage='/LedFx-Frontend-v2/docs'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\""
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ],
    "overrides": [
      {
        "files": [
          "**/*.stories.*"
        ],
        "rules": {
          "import/no-anonymous-default-export": "off"
        }
      }
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@storybook/addon-actions": "^6.5.13",
    "@storybook/addon-essentials": "^6.5.13",
    "@storybook/addon-links": "^6.5.13",
    "@storybook/addons": "^6.5.13",
    "@storybook/builder-webpack5": "^6.5.13",
    "@storybook/manager-webpack5": "^6.5.13",
    "@storybook/node-logger": "^6.5.13",
    "@storybook/preset-create-react-app": "^4.0.2",
    "@storybook/theming": "^6.5.13",
    "@types/chart.js": "^2.9.37",
    "@types/react": "^18.0.25",
    "@types/react-dom": "^18.0.8",
    "@types/react-router-dom": "^5.3.3",
    "@types/styled-components": "^5.1.26",
    "@typescript-eslint/eslint-plugin": "^5.42.1",
    "@typescript-eslint/parser": "^5.42.1",
    "concurrently": "^7.5.0",
    "cross-env": "^7.0.3",
    "electron": "^21.2.3",
    "electron-builder": "^23.6.0",
    "electron-devtools-installer": "^3.2.0",
    "eslint": "8.27.0",
    "eslint-config-airbnb": "19.0.4",
    "eslint-config-prettier": "^8.5.0",
    "eslint-import-resolver-typescript": "^3.5.2",
    "eslint-plugin-flowtype": "^8.0.2",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-jest": "^27.1.4",
    "eslint-plugin-json": "^3.0.0",
    "eslint-plugin-jsx-a11y": "6.6.1",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-react": "7.31.10",
    "eslint-plugin-react-hooks": "4.6.0",
    "gh-pages": "^4.0.0",
    "prettier": "^2.6.2",
    "react-is": "^18.1.0",
    "run-script-os": "^1.1.6",
    "wait-on": "^6.0.1",
    "webpack": "^5.75.0"
  },
  "build": {
    "extraResources": [
      {
        "from": "./extraResources/",
        "to": "extraResources",
        "filter": [
          "**/*"
        ]
      }
    ],
    "win": {
      "icon": "build/icon.ico",
      "artifactName": "LedFx_CC-v${version}--${os}.${ext}"
    },
    "portable": {
      "artifactName": "LedFx_CC-v${version}--${os}-portable.${ext}"
    },
    "nsis": {
      "artifactName": "LedFx_CC-v${version}--${os}-setup.${ext}"
    },
    "linux": {
      "icon": "build/icon.png"
    },
    "mac": {
      "icon": "build/icon.png",
      "artifactName": "LedFx_CC-v${version}--${os}-${arch}.${ext}"
    },
    "dmg": {
      "background": "src/assets/DMG_BG.jpg",
      "contents": [
        {
          "x": 135,
          "y": 165
        },
        {
          "x": 407,
          "y": 165,
          "type": "link",
          "path": "/Applications"
        }
      ],
      "iconSize": 120,
      "iconTextSize": 14,
      "window": {
        "height": 380
      }
    }
  }
}
